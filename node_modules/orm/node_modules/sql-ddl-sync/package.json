{
  "author": {
    "name": "Diogo Resende",
    "email": "dresende@thinkdigital.pt"
  },
  "name": "sql-ddl-sync",
  "description": "NodeJS SQL DDL Synchronization",
  "keywords": [
    "sql",
    "ddl",
    "sync",
    "mysql",
    "postgres",
    "sqlite"
  ],
  "version": "0.1.3",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "http://github.com/dresende/node-sql-ddl-sync.git"
  },
  "main": "./lib/Sync",
  "scripts": {
    "test": "make test"
  },
  "engines": {
    "node": "*"
  },
  "analyse": false,
  "dependencies": {
    "lodash": "2.2.1"
  },
  "devDependencies": {
    "mocha": "1.14.0",
    "should": "2.0.2",
    "commander": "~2.0.0"
  },
  "readme": "## NodeJS SQL DDL Synchronization\n\n[![Build Status](https://secure.travis-ci.org/dresende/node-sql-ddl-sync.png?branch=master)](http://travis-ci.org/dresende/node-sql-ddl-sync)\n[![](https://badge.fury.io/js/sql-ddl-sync.png)](https://npmjs.org/package/sql-ddl-sync)\n[![](https://gemnasium.com/dresende/node-sql-ddl-sync.png)](https://gemnasium.com/dresende/node-sql-ddl-sync)\n\n## Install\n\n```sh\nnpm install sql-ddl-sync\n```\n\n## Dialects\n\n- MySQL\n- PostgreSQL\n\n## About\n\nThis module is used by [ORM](http://dresende.github.com/node-orm2) to synchronize model tables in the different supported\ndialects. Sorry there is no API documentation for now but there are a couple of tests you can read and find out how to use\nit if you want.\n\n## Example\n\nInstall module and install `mysql`, create a file with the contents below and change line 2 to match valid credentials.\nRun once and you'll see table `ddl_sync_test` appear in your database. Then make some changes to it (add/drop/change columns)\nand run the code again. Your table should always return to the same structure.\n\n```js\nvar mysql = require(\"mysql\");\nvar db    = mysql.createConnection(\"mysql://username:password@localhost/database\");\n\nvar Sync = require(\"sql-ddl-sync\").Sync;\nvar sync = new Sync({\n\tdialect : \"mysql\",\n\tdb      : db,\n\tdebug   : function (text) {\n\t\tconsole.log(\"> %s\", text);\n\t}\n});\n\nsync.define(\"ddl_sync_test\", {\n\tid     : { type : \"number\", primary: true, serial: true },\n\tname   : { type : \"text\", required: true },\n\tage    : { type : \"number\", rational: true },\n\tmale   : { type : \"boolean\" },\n\tborn   : { type : \"date\", time: true },\n\tborn2  : { type : \"date\" },\n\tint2   : { type : \"number\", size: 2 },\n\tint4   : { type : \"number\", size: 4 },\n\tint8   : { type : \"number\", size: 8 },\n\tfloat4 : { type : \"number\", rational: true, size: 4 },\n\tfloat8 : { type : \"number\", rational: true, size: 8 },\n\ttype   : { type : \"enum\", values: [ 'dog', 'cat'], defaultValue: 'dog', required: true },\n\tphoto  : { type : \"binary\" }\n});\n\nsync.sync(function (err) {\n\tif (err) {\n\t\tconsole.log(\"> Sync Error\");\n\t\tconsole.log(err);\n\t} else {\n\t\tconsole.log(\"> Sync Done\");\n\t}\n\tprocess.exit(0);\n});\n\n```\n\n## Test\n\nTo test, first make sure you have development dependencies installed. Go to the root folder and do:\n\n```sh\nnpm install\n```\n\nThen, just run the tests.\n\n```sh\nnpm test\n```\n\nIf you have a supported database server and want to test against it, first install the module:\n\n```sh\n# if you have a mysql server\nnpm install mysql\n# if you have a postgresql server\nnpm install pg\n```\n\nAnd then run:\n\n```sh\nnode test/run-db --uri 'mysql://username:password@localhost/database'\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/dresende/node-sql-ddl-sync/issues"
  },
  "homepage": "https://github.com/dresende/node-sql-ddl-sync",
  "_id": "sql-ddl-sync@0.1.3",
  "dist": {
    "shasum": "9c42f3229a645f94690ede970296cff42587e8da"
  },
  "_from": "sql-ddl-sync@0.1.3",
  "_resolved": "https://registry.npmjs.org/sql-ddl-sync/-/sql-ddl-sync-0.1.3.tgz"
}
